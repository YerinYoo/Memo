# 상속
- 부모클래스의 모든 것을 자식 클래스에게 물려줄 수 있음 / 접근 제한자에 따라 변동 있음
+) 부모 클래스 = 상위 클래스
+) 자식 클래스 = 하위 클래스, 파생 클래스

- 다중 상속 X >> 한개의 부모 클래스만 가질 수 있음

public class 자식 클래스 extends 부모 클래스

- 클래스 상속의 다이어그램 : 자식 클래스 -> 부모 클래스

* 상속 관계에서의 생성자 
- 부모 생성자가 먼저 실행되어 생성 된 후 자식 생성자가 생성됨
- 부모 생성자가 기본 생성자일 경우 : 자식 생성자에서 부모 생성자 호출하지 않아도 됨 (자동 처리)
- 부모 생성자가 존재 : 자식 생성자 블록 최상단에 부모 생성자 호출 (super 사용)

* 오버라이드
- 상속 받은 메서드의 내용이 자식에게 맞지 않는 경우, 자식 클래스 내부에서 부모 메서드 재구현
- 부모함수와 동일한 메서드 이름, 리턴 타입, 매개 변수
- 오버라이드 되면 자식 메서드만 참조하게 됨
- 오버라이드 이후 부모 메서드 호출은 super 키워드 사용


* Final
- 초기 값 부여한 후 값 변경할 수 없기 때문에 상속, 오버라이드 불가

* 타입 변환 & 다형성
: 자식 타입은 부모 타입으로 자동 타입 변환 가능
1. 자동 타입 변환
2. 강제 타입 변환

================================================================================================

# 추상 클래스
: 공통되는 특성을 추출하는 것

* 추상 클래스와 자식 클래스의 차이
1. 상속 : 부모와 자식 간에 연관 관계가 있어 비슷한 모듈에서 사용됨
2. 추상 : 

================================================================================================

# 추상 메서드

- 하위 클래스가 반드시 실행 내용을 채우도록 강요하고 싶은 메서드가 있을 경우 사용
- 추상 클래스에서만 선언할 수 있음 >> 부모 클래스에만 존재
- 상속 받은 하위 클래스는 해당 클래스를 무조건 오버라이딩 해야함

* 형식
: public abstract 리턴형 함수 이름 (); (내용 없음)
